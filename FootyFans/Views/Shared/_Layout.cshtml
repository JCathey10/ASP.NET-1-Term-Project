@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Mvc.ViewEngines
@inject IWebHostEnvironment Environment
@inject ICompositeViewEngine Engine

<header>
    <div id="logo">Footy&nbsp;Fans</div>
</header>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/site.css">


    <title>@ViewBag.Title - Footy Fans</title>
</head>
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand" asp-controller="Home" asp-action="Home">Footy Fans</a>
        </div>
        <ul class="nav navbar-nav">
            <li><a asp-controller="Home" asp-action="Home">Home</a></li>
            <li><a asp-controller="Home" asp-action="News">Recent News</a></li>
            <li><a asp-controller="Home" asp-action="Footage">Footage</a></li>
            <li><a asp-controller="Home" asp-action="About">About</a></li>
        </ul>
        <ul class="nav navbar-nav navbar-right">
            @{
                var result = Engine.FindView(ViewContext, "_LoginPartial", isMainPage: false);
            }
            @if (result.Success)
            {
                await Html.RenderPartialAsync("_LoginPartial");
            }
            else
            {
                throw new InvalidOperationException("The default Identity UI layout requires a partial view '_LoginPartial' " +
                    "usually located at '/Pages/_LoginPartial' or at '/Views/Shared/_LoginPartial' to work. Based on your configuration " +
                    $"we have looked at it in the following locations: {System.Environment.NewLine}{string.Join(System.Environment.NewLine, result.SearchedLocations)}.");
            }
        </ul>
    </div>
</nav>

<body>

    @RenderBody()
</body>
</html>
