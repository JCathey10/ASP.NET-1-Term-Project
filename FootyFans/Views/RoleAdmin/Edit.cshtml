@model UserRoleEditModel
@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Mvc.ViewEngines
@inject IWebHostEnvironment Environment
@inject ICompositeViewEngine Engine
@{
    // Using ViewData to send the Title back to _Layout
    ViewBag.Title = "Edit Role";
    Layout = "_Layout";
}
    <header>
        <div id="logo">Footy&nbsp;Fans</div>
    </header>
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" asp-controller="Home" asp-action="Home">Footy Fans</a>
            </div>
            <ul class="nav navbar-nav">
                <li><a asp-controller="Home" asp-action="Home">Home</a></li>
                <li><a asp-controller="Home" asp-action="News">Recent News</a></li>
                <li><a asp-controller="Home" asp-action="Footage">Footage</a></li>
                <li><a asp-controller="Home" asp-action="About">About</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-right">
                @{
                    var result = Engine.FindView(ViewContext, "_LoginPartial", isMainPage: false);
                }
                @if (result.Success)
                {
                    await Html.RenderPartialAsync("_LoginPartial");
                }
                else
                {
                    throw new InvalidOperationException("The default Identity UI layout requires a partial view '_LoginPartial' " +
                        "usually located at '/Pages/_LoginPartial' or at '/Views/Shared/_LoginPartial' to work. Based on your configuration " +
                        $"we have looked at it in the following locations: {System.Environment.NewLine}{string.Join(System.Environment.NewLine, result.SearchedLocations)}.");
                }
            </ul>
        </div>
    </nav>

<div id="wrapper">
    <div class="bg-primary m-1 p-1 text-white"><h4>Edit Role</h4></div>

    <div asp-validation-summary="All" class="text-danger"></div>
    <form asp-action="Edit" method="post">
        <input type="hidden" name="roleName" value="@Model.Role.Name" />
        <input type="hidden" name="roleId" value="@Model.Role.Id" />
        <h6 class="bg-info p-1 text-white">Add To @Model.Role.Name</h6>
        <table class="table table-bordered table-sm">
            @if (Model.NonMembers.Count() == 0)
            {
                <tr><td colspan="2">All Users Are Members</td></tr>
            }
            else
            {
                @foreach (AppUser user in Model.NonMembers)
                {
                    <tr>
                        <td>@user.UserName</td>
                        <td>
                            <input type="checkbox" name="IdsToAdd" value="@user.Id">
                        </td>
                    </tr>
                }
            }
        </table>

        <h6 class="bg-info p-1 text-white">Remove From @Model.Role.Name</h6>
        <table class="table table-bordered table-sm">
            @if (Model.Members.Count() == 0)
            {
                <tr><td colspan="2">No Users Are Members</td></tr>
            }
            else
            {
                @foreach (AppUser user in Model.Members)
                {
                    <tr>
                        <td>@user.UserName</td>
                        <td>
                            <input type="checkbox" name="IdsToDelete" value="@user.Id">
                        </td>
                    </tr>
                }
            }
        </table>
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>
